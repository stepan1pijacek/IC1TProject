from Utilities.ProcessActions import CreateProcess as cp
import re
import subprocess as sp
import os


class AutomatedPenTest:
    def __init__(self, process, user_name, bank_account):
        self.bank_account = bank_account
        self.process = process
        self.user_name = user_name

    def begin_pen_test(self):      
        confirmed_vulnerabilities = []
        process = sp.Popen(["./" + self.process, self.user_name]
                            ,stdout=sp.PIPE
                            ,stderr=sp.PIPE
                            ,universal_newlines=True
                            )

        current_console_out = process.stdout.readline()
        print(current_console_out)
        process.stdin.write("aaaaaaaaaaaaaaaaaaaaaaaaaaa\n")
        if not re.match("password|login", current_console_out):
            return "Failed, application did not start \n" + current_console_out
        else:
            confirmed_vulnerabilities.insert("Buffer overflow is confirmed vulnerability")


        current_console_out = process.stdout.readline()

        if not re.match("account number", current_console_out):
            return "Failed, account number is not visible."

        process.stdin.writelines("1231354\n")

        current_console_out = process.stdout.readline()

        if not re.match("amount", current_console_out):
            return "Failed, amount is not visible."
        else:
            confirmed_vulnerabilities.insert("Integer overflow is confirmed vulnerability")

        process.stdin.writelines("21476511478\n")

        process.kill()
        print("Penetration testing terminated with success")

        return confirmed_vulnerabilities
